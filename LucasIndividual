#include <reg932.h>

sbit t_sw = P2^3;
sbit s_sw = P0^1;
sbit p_sw = P2^5;
sbit beats = P1^4;

sbit sw1 = P2^1;
sbit sw2 = P0^3;
sbit sw3 = P2^2;
sbit wave = P1^7;
sbit LED1 = P2^5;
sbit LED2 = P0^7;
sbit LED3 = P2^6;

#define note_A4 2095
#define note_C5 1761
#define note_D5 1569
#define note_C4 3523
#define note_D4 3138
#define note_E4 2796
#define note_F4 2639
#define note_F3 5278
#define note_D4b 3325
#define note_D4s 2962
#define note_A5 1047
#define note_B5 933
#define note_C6 881
#define note_D6 785
#define note_E6 699
#define note_B3 3954
#define note_A3 4189


unsigned int quarterNote = 450;
unsigned int wholeNote;
unsigned int halfNote;
unsigned int eighthNote;
unsigned int note_test;

int inc = 1;
int globalNote;

void playNote(int note);
void stopNote();
void piano();
void playnotetime(int note,unsigned int n);
void tetris();
void setTempo();
void spongebob();
void displayBPM();

void TIMR1ISR() interrupt 3
{
	TR1 = 0;
	wave = ~wave;
	TH1 = -(globalNote>>8);
	TL1 = -globalNote;
	TF1 = 0;
	TR1 = 1;
}

void playNote(int note)
{

	TMOD = 0x10;
	globalNote = note;
	TH1 = -(note>>8);
	TL1 = -note;
	TR1 = 1;
}


void stopNote()
{
	TR1 = 0;
	TF1 = 0;
	wave = 1;
}

void piano()
{
	if(sw1 == 0)
	{
		playNote(note_A4);
		while(sw1 == 0);
	}
	if(sw2 == 0)
	{
		playNote(note_C5);
		while(sw2 == 0);
	}

	if(sw3 == 0)
	{
		playNote(note_D5);
		while(sw3 == 0);
	}
	else
		stopNote();
}


void tetris(){
    setTempo();
	playnotetime(note_E4, 3*eighthNote);
	playnotetime(note_B3, eighthNote);
	playnotetime(note_C4, quarterNote);
	playnotetime(note_D4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_B3, 3*eighthNote);
	playnotetime(note_A3, eighthNote);
	playnotetime(note_A3, quarterNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_E4, eighthNote);
	
	
}

void playnotetime(int note, unsigned int n)
{
  unsigned int z = n;
  int i;
  playNote(note);
  LED1 = 0;
  while(z-- > 0)
  {
	for(i = 0; i < 250; i++);
  }
  LED1 = 1;
  stopNote();
}

void main() 
{
  P2M1 = 0x00;
  P1M1 = 0x00;
  P0M1 = 0x00;
  IEN0 = 0x8D;
  IP = 0x05;
  while(1);
  {
   piano();
    if (beats == 0)
    {
      if (inc == 0)
      {
	  displayBPM();
	  quarterNote = 450;
	  setTempo();
          inc++;
      }
      else if ( inc == 1)
      {
	  display();
	  quarterNote = (130/120) * 450;
	  setTempo();
          inc++;
	}
      else if (inc == 2)
      {
        displayBPM();
        quarterNote = (140/120) * 450;
        setTempo();
        inc++;
      }
      else if (inc == 3)
      {
	  displayBPM();
	  quarterNote = (150/120) * 450;
	  setTempo();
	  inc++;
       }
      else if (inc == 4)
      {
	  displayBPM();
	  quarterNote = (100/120) * 450;
	  setTempo();
	  inc++;
      }
      else if (inc == 5)
      {
	  displayBPM();
	  quarterNote = (110/120) * 450;
	  inc = 0;
      }
    }
    if (t_sw == 0)
    {
      tetris();   
    }
    if (s_sw == 0)
    {
      
        spongebob();
    }
  }
}

void spongebob()
{
	setTempo();
	playnotetime(note_D4b, quarterNote);
	playnotetime(note_D4b, quarterNote);
	playnotetime(note_D4b, quarterNote);
	playnotetime(note_D4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_D4s, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_A3, eighthNote);
	playnotetime(note_F3, eighthNote);
	playnotetime(note_A3, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_D4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_A3, quarterNote);
	playnotetime(note_F4, eighthNote);
	playnotetime(note_E4, eighthNote);
	playnotetime(note_F4, eighthNote);
	playnotetime(note_D4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_D4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_A3, eighthNote);
	playnotetime(note_F4, eighthNote);
	playnotetime(note_A3, eighthNote);
	playnotetime(note_F4, eighthNote);
}

void setTempo()
{
  wholeNote = 4 * quarterNote;
  halfNote = 2 * quarterNote;
  eighthNote = quarterNote / 2;
}
void displayBPM()
{
 
	uart_init();

	

         if (inc == 0)
          {
            uart_transmit('1');
            uart_transmit('2');
	    uart_transmit('0');
            uart_transmit('B');
            uart_transmit('P');
            uart_transmit('M');
	      while (inc == 0);

          }
	  if (inc == 1)
	  {
	    uart_transmit('1');
            uart_transmit('3');
	    uart_transmit('0');
            uart_transmit('B');
            uart_transmit('P');
            uart_transmit('M');
	      while (inc == 1);
	  }
	  if (inc == 2 )
	  {
	    uart_transmit('1');
            uart_transmit('4');
	    uart_transmit('0');
            uart_transmit('B');
            uart_transmit('P');
            uart_transmit('M');
	      while (inc == 2);
	  }
	  if (inc == 3 )
	  {
	    uart_transmit('1');
            uart_transmit('5');
	    uart_transmit('0');
            uart_transmit('B');
            uart_transmit('P');
            uart_transmit('M');
	      while (inc==1);
	  }
	  if (inc == 4)
	  {
	    uart_transmit('1');
            uart_transmit('0');
	    uart_transmit('0');
            uart_transmit('B');
            uart_transmit('P');
            uart_transmit('M');
	      while (inc == 4);
	  }
	  if (inc == 5 )
	  {
	    uart_transmit('1');
            uart_transmit('1');
	    uart_transmit('0');
            uart_transmit('B');
            uart_transmit('P');
            uart_transmit('M');
	      while (inc == 5);
	  }
}
