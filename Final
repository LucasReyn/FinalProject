#include <reg932.h>

sbit tetris = P2^0;
sbit sponge = P0^2;
sbit piano = P2^5;

sbit sw1 = P2^1;
sbit sw2 = P0^3;
sbit sw3 = P2^2;
sbit wave = P1^7;
sbit LED1 = P2^5;
sbit LED2 = P0^7;
sbit LED3 = P2^6;

#define note_A4 4189
#define note_C5 3523
#define note_D5 3135
#define note_C4 7045
#define note_D4 6277
#define note_E4 5592
#define note_F4 5278
#define note_F3 10556
#define note_D4b 6650
#define note_D4s 5924 
#define note_A5 2095 
#define note_B5 1866
#define note_C6 1761
#define note_D6 1569
#define note_E6 1398

int globalNote;

void playNote(int note);
void stopNote();
void piano();
void display();
void uart_transmit(char c);
void playnotetime(int note,int n);
void tetris();

void TIMR1ISR() interrupt 3
{
	TR1 = 0;
	wave = ~wave;
	TH1 = -(globalNote>>8);
	TL1 = -globalNote;
	TF1 = 0;
	TR1 = 1;
}

void playNote(int note)
{
	IEN0 = 0x8A;
	TMOD = 0x10;
	globalNote = note;
	TH1 = -(note>>8);
	TL1 = -note;
	TR1 = 1;
}


void stopNote()
{
	IEN0 = 0x00;
	TR1 = 0;
	TF1 = 0;
	wave = 1;
}

void piano()
{
	if(sw1 == 0)
	{
		playNote(note_A4);
		while(sw1 == 0);
	}
	if(sw2 == 0)
	{
		playNote(note_C5);
		while(sw2 == 0);
	}

	if(sw3 == 0)
	{
		playNote(note_D5);
		while(sw3 == 0);
	}
	else
		stopNote();
}

void display()
{

	uart_init();

	while (1)
        {
         if (tetris == 0)
          {
            uart_transmit('T');
            uart_transmit('e');
	          uart_transmit('t');
            uart_transmit('r');
            uart_transmit('i');
            uart_transmit('s');
	          while (tetris==0);

          }

	 if (sponge == 0)
	  {
            uart_transmit('S');
            uart_transmit('p');
	    uart_transmit('o');
            uart_transmit('n');
            uart_transmit('g');
            uart_transmit('e');
            uart_transmit('B');
            uart_transmit('o');
            uart_transmit('b');
            
            uart_transmit(' ');

            uart_transmit('S');
            uart_transmit('q');
            uart_transmit('u');
            uart_transmit('a');
            uart_transmit('r');
            uart_transmit('e');
            uart_transmit('p');
            uart_transmit('a');
            uart_transmit('n');
            uart_transmit('t');
            uart_transmit('s');
	          while (sponge==0);

          }
   
        }	 

}

void uart_init
  (
  void
  )
{
  // configure UART
  // clear SMOD0
  PCON &= ~0x40;
  SCON = 0x50;
  // set or clear SMOD1
  PCON &= 0x7f;
  PCON |= (0 << 8);
  SSTAT = 0x00;

  // enable break detect
  AUXR1 |= 0x40;

  // configure baud rate generator
  BRGCON = 0x00;
  BRGR0 = 0xF0;
  BRGR1 = 0x02;                      //BRGR0 and BRGR1 were
  BRGCON = 0x03;                     //changed to set the baud rate to 9600

  // TxD = push-pull, RxD = input
  P1M1 &= ~0x01;
  P1M2 |= 0x01;
  P1M1 |= 0x02;
  P1M2 &= ~0x02;

  // initially not busy
  mtxbusy = 0;

  // set isr priority to 0
  IP0 &= 0xEF;
  IP0H &= 0xEF;
  // enable uart interrupt
  ES = 1;

} // uart_init

void uart_transmit(char c)
{
  while(mtxbusy);
  mtxbusy = 1;
  SBUF = c;
}

void tetris(){
	playnotetime(note_E6, 2639);
	playnotetime(note_B5, 1976);
	playnotetime(note_C6, 2217);
	playnotetime(note_D6, 2347);
	playnotetime(note_C6, 2217);
	playnotetime(note_B5, 1976);
	playnotetime(note_A5, 1761);
	playnotetime(note_A5, 1761);
	playnotetime(note_C6, 2217);
	playnotetime(note_E6, 2693);
	
}

void playnotetime(int note, unsigned int n)
{

}

NoteDelay(unsigned int interval)
{
  TMOD = 0x01;
  TL0 = - interval;
  TH0 = - (interval >> 8);
  TR0 = 1;
  while(TF0 == 0);
  TRO = 0;
  TF0 = 0;
}

void main() 
{
  P2M1 = 0x00;
  P1M1 = 0x00;
  P0M1 = 0x00;

  TMOD = 0x11;
  IEN1 = 0x88;

  while(1);
  {
    if (tetris == 0)
    {
      while (tetris == 0 && sponge == 1 && piano == 1)
      {
        display();
        tetris();
      }
    }
    if (sponge == 0)
    {
      while (sponge == 0 && tetris == 1 && piano == 1)
      {
      	display();
        sponge();
      }
    }
    if (keybrd == 0)
    {
      while (tetris == 1 && sponge == 1)
      {
        piano();
      }
    }
  }
}

void spongebob()
{
	setTempo(120);

	playnotetime(note_D4b, quarterNote);
	playnotetime(note_D4b, quarterNote);
	playnotetime(note_D4b, quarterNote);
	playnotetime(note_D4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_D4s, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_A4, eighthNote);
	playnotetime(note_F3, eighthNote);
	playnotetime(note_A4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_D4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_A4, quarterNote);
	playnotetime(note_F4, eighthNote);
	playnotetime(note_E4, eighthNote);
	playnotetime(note_F4, eighthNote);
	playnotetime(note_D4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_D4, eighthNote);
	playnotetime(note_C4, eighthNote);
	playnotetime(note_A4, eighthNote);
	playnotetime(note_F4, eighthNote);
	playnotetime(note_A4, eighthNote);
	playnotetime(note_F4, eighthNote);
}



